package com.rendonsoft.beerappdemotest.feature.home.dataimport com.rendonsoft.beerappdemotest.feature.home.data.dataSource.HomeBeerLocalDataSourceimport com.rendonsoft.beerappdemotest.feature.home.data.dataSource.HomeBeerRemoteDataSourceimport com.rendonsoft.beerappdemotest.feature.home.data.mapper.BeerToBeerDtoMapperimport com.rendonsoft.beerappdemotest.feature.home.domain.model.BeerModelclass HomeBeerRepository(        private val homeBeerLocalDataSource: HomeBeerLocalDataSource,        private val homeBeerRemoteDataSource: HomeBeerRemoteDataSource,        private val beerToBeerDtoMapper: BeerToBeerDtoMapper) {    suspend fun getBeerByPage(page: Int): List<BeerModel> {        val beersLocal = homeBeerLocalDataSource.getBeersByPage(page)        return beersLocal.ifEmpty {            val beers = homeBeerRemoteDataSource.getBeerByPage(page)            if (beers.isNotEmpty()) {                val list = beers.map { beerToBeerDtoMapper.map(it) }.toTypedArray()                homeBeerLocalDataSource.saveBeers(beers = list)                return homeBeerLocalDataSource.getBeersByPage(page)            } else {                listOf()            }        }    }    suspend fun getBeerById(beerId: Int) = homeBeerLocalDataSource.getBeerById(beerId)}