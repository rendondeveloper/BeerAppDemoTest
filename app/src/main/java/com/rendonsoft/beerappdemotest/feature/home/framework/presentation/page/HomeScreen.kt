package com.rendonsoft.beerappdemotest.feature.home.framework.presentation.pageimport androidx.compose.animation.AnimatedVisibilityimport androidx.compose.foundation.layout.Arrangementimport androidx.compose.foundation.layout.Boximport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.foundation.lazy.itemsimport androidx.compose.foundation.lazy.rememberLazyListStateimport androidx.compose.material.ExperimentalMaterialApiimport androidx.compose.material.pullrefresh.PullRefreshIndicatorimport androidx.compose.material.pullrefresh.pullRefreshimport androidx.compose.material.pullrefresh.rememberPullRefreshStateimport androidx.compose.material3.CenterAlignedTopAppBarimport androidx.compose.material3.CircularProgressIndicatorimport androidx.compose.material3.ExperimentalMaterial3Apiimport androidx.compose.material3.MaterialThemeimport androidx.compose.material3.Scaffoldimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.runtime.LaunchedEffectimport androidx.compose.runtime.collectAsStateimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.res.stringResourceimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.tooling.preview.Previewimport androidx.compose.ui.unit.dpimport com.rendonsoft.beerappdemotest.Rimport com.rendonsoft.beerappdemotest.feature.home.framework.presentation.page.model.HomeUiStateimport com.rendonsoft.beerappdemotest.feature.home.framework.presentation.page.widgets.BeerCardimport com.rendonsoft.beerappdemotest.feature.home.framework.presentation.viewModel.HomeViewModelimport com.rendonsoft.beerappdemotest.theme.BeerAppDemoTestTheme@OptIn(ExperimentalMaterial3Api::class, ExperimentalMaterialApi::class)@Composablefun HomeScreen(        modifier: Modifier = Modifier,        homeViewModel: HomeViewModel) {    val uiState = homeViewModel.homeUiState.collectAsState().value    val pullRefreshState = rememberPullRefreshState(            if (uiState is HomeUiState.Empty) {                uiState.showPullToRefresh            } else {                false            }, { homeViewModel.refresh() })    Scaffold(            modifier = modifier,            topBar = {                CenterAlignedTopAppBar(                        title = {                            Text(text = stringResource(id = R.string.home_toolbar_name),                                    style = MaterialTheme.typography.titleLarge                                            .copy(                                                    color = MaterialTheme.colorScheme.onSecondary,                                                    fontWeight = FontWeight.Bold                                            ))                        },                )            }    ) {        when (uiState) {            is HomeUiState.Loading -> {                Box(modifier = Modifier                        .fillMaxSize()                        .padding(it)) {                    CircularProgressIndicator(                            color = MaterialTheme.colorScheme.secondary,                            modifier = Modifier.align(Alignment.Center)                    )                }            }            is HomeUiState.Data -> {                LazyColumn(                        horizontalAlignment = Alignment.CenterHorizontally,                        verticalArrangement = Arrangement.spacedBy(8.dp),                        modifier = Modifier                                .padding(it)                                .padding(top = 4.dp)                                .fillMaxSize()) {                    items(uiState.beers) {                        BeerCard(                                data = it,                                onClick = {                                }                        )                    }                    item {                        LaunchedEffect(true) {                            homeViewModel.getNextScreen()                        }                    }                    item {                        AnimatedVisibility(visible = uiState.shoeLoader,                                modifier = Modifier.padding(vertical = 16.dp)) {                            CircularProgressIndicator(                                    color = MaterialTheme.colorScheme.secondary                            )                        }                    }                }            }            is HomeUiState.Empty -> {                Box(modifier = Modifier                        .fillMaxSize()                        .padding(it)                        .pullRefresh(pullRefreshState)                ) {                    LazyColumn(                            verticalArrangement = Arrangement.Center,                            horizontalAlignment = Alignment.CenterHorizontally,                            modifier = Modifier                                    .align(Alignment.Center)                                    .fillMaxSize()                    ) {                        item { Text(text = stringResource(id = uiState.title), style = MaterialTheme.typography.headlineLarge) }                        item { Spacer(modifier = Modifier.height(16.dp)) }                        item { Text(text = stringResource(id = uiState.message), style = MaterialTheme.typography.headlineMedium.copy(fontWeight = FontWeight.Bold)) }                    }                    PullRefreshIndicator(                            refreshing = uiState.showPullToRefresh,                            state = pullRefreshState,                            modifier = Modifier.align(Alignment.TopCenter)                    )                }            }            HomeUiState.LoadingPage -> {            }        }    }}@Preview@Composablefun HomeScreenPreview() {    BeerAppDemoTestTheme {        //HomeScreen(modifier = Modifier.fillMaxSize())    }}